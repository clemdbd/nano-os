####################################################################################################
# \file arm-keil-kl25z128.target
# \brief KL25Z128 with ARM Keim target definition
# \author C. Jimenez
# \copyright Copyright(c) 2017 Cedric Jimenez
#
# This file is part of Nano-OS.
#
# Nano-OS is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Nano-OS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Nano-OS.  If not, see <http://www.gnu.org/licenses/>.
####################################################################################################

# Include toolchain
include $(ROOT_DIR)/build/make/compilers/arm-keil.compiler


# Target ARCH and CPU
TARGET_ARCH=cortex-m0plus
TARGET_CPU=

# Target BSP
TARGET_BSP=bsps/bsp_kl25z128

# Target lib dependencies
TARGET_DEPENDENCIES=

# Target specific include directories
TARGET_INC_DIRS=

# Target specific lib directories
TARGET_LIB_DIRS=

# Target specific libraries
TARGET_LIBS=

# Target implementation for the project defines
TARGET_PROJECT_DEFINES=$(foreach PROJECT_DEFINE, $(PROJECT_DEFINES), -D$(PROJECT_DEFINE))

# Nano OS configuration file directory
ifeq ($(origin NANO_OS_CONFIG_FILE_DIR), undefined)
    NANO_OS_CONFIG_FILE_DIR=$(ROOT_DIR)/src/$(TARGET_BSP)/nano_os_config
endif


# Optimisation level
OPTIMIZATION_LEVEL = -O0

# Disabled warnings
DISABLED_WARNINGS = 

# Toolchain flags
COMMON_FLAGS = $(OPTIMIZATION_LEVEL) $(TARGET_PROJECT_DEFINES) -g -c --cpu Cortex-M0+ --littleend --apcs=interwork --split_sections --vfe
CFLAGS = $(COMMON_FLAGS) $(DISABLED_WARNINGS) $(PROJECT_CFLAGS) --c99
CXXFLAGS = $(COMMON_FLAGS) $(DISABLED_WARNINGS) $(PROJECT_CXXFLAGS) --cpp11 --no_rtti --no_exceptions --no_exceptions_unwind
ASFLAGS = $(PROJECT_ASFLAGS) -g --cpu Cortex-M0+ --littleend --apcs=interwork --cpreproc
LDFLAGS = --cpu Cortex-M0+ --strict  --vfemode=on --littleend --startup=_vectors --entry=Reset_Handler --map --list=$(patsubst /cygdrive/$(DRIVE_LETTER)%,$(DRIVE_LETTER):%, $(abspath $(patsubst %.axf, %.map, $(BIN_DIR)/$(OUTPUT_NAME)))) --scatter $(ROOT_DIR)/src/bsps/bsp_kl25z128/keil/kl25z128.sct  $(PROJECT_LDFLAGS)
ARFLAGS = -c -r $(PROJECT_ARFLAGS)

# Number of times the libraries names shall be duplicated in the command line
TARGET_DUP_COUNT := 
